#!/bin/bash

# It extracts from a bunch of compression and archiving formats
extract()
{
	if [ -f "$1" ] ; then
		case "$1" in
			*.tar.bz2) tar xjf "$1" ;;
		*.tar.gz) tar xzf "$1" ;;
	*.tar.Z) tar xzf "$1" ;;
*.bz2) bunzip2 "$1" ;;
*.rar) unrar x "$1" ;;
*.gz) gunzip "$1" ;;
*.jar) unzip "$1" ;;
*.tar) tar xf "$1" ;;
*.tbz2) tar xjf "$1" ;;
*.tgz) tar xzf "$1" ;;
*.zip) unzip "$1" ;;
*.Z) uncompress "$1" ;;
*) echo "'$1' cannot be extracted." ;;
esac
else
	echo "'$1' is not a file."
fi
}

# 
localnet ()
{
	/sbin/ifconfig | awk /'inet addr/ {print $2}' 
	echo ""
	/sbin/ifconfig | awk /'Bcast/ {print $3}' 
	echo ""
}

# Looks for the ip of this computer
myip ()
{
	lynx -dump -hiddenlinks=ignore -nolist http://checkip.dyndns.org:8245/ | grep "Current IP Address" | cut -d":" -f2 | cut -d" " -f2
}

# Shows the uptime for this terminal
upinfo ()
{
	echo -ne "${txtgrn}$HOSTNAME ${txtred}uptime is ${txtcyn} \t ";uptime | awk /'up/ {print $3,$4,$5,$6,$7,$8,$9,$10}'
}

# Fetch the weather from Weather Underground
weather ()
{
	curl -s "http://api.wunderground.com/auto/wui/geo/ForecastXML/index.xml?query=${@:-<YOURZIPORLOCATION>}"|perl -ne '/<title>([^<]+)/&&printf "\x1B[0;34m%s\x1B[0m: ",$1;/<fcttext>([^<]+)/&&print $1,"\n"';
}

# Encrypts using GNUPG
encrypt ()
{
	gpg -ac --no-options "$1"
}

decrypt ()
{
	gpg --no-options "$1"
}

# fetches Futurama quotes from http://www.slashdot.org
futurama ()
{
	curl -Is slashdot.org | sed -n '5p' | sed 's/^X-//'
}

# Creates a directory and sets the PWD to it
take ()
{
	mkdir $1
	cd $1
}

#########################
# Git
#########################

gh_open () {
	open $(git config remote.origin.url | sed 's/\.git$//')
}

#########################
# FFMPEG
#########################
convert_video_to_mp4 () {
	find . -name '*.mov' -print0 | xargs -0 -I xxx ffmpeg -i xxx -f mp4 -vcodec mpeg4 -sameq xxx.mp4
	find . -iname '*.mov.mp4' -print0 | xargs -0 rename 's/\.mov\.mp4$/\.mp4/i'
	mkdir ./oldmovies/
	find . -iname '*.mov' -print0 | xargs -0 -I fff mv fff ./oldmovies/
}
#convert_video_to_mp4 () {
	#for fname in $(find . -iname '*.mov')
	#do
		#outputfname=`ls $fname | awk -F . {'print $1'}`
		#ffmpeg -i $fname -f mp4 -vcodec mpeg4 -sameq $outputfname.mp4
	#done
#}

# tidy
tidyup () {
	cat $1 | tidy -config $HOME/.vim/tidy.conf -i -asxml -o $1.tidy.html
}



